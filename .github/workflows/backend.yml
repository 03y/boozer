# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go backend build

on:
  push:
      paths:
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    # Build for Linux AMD64
    - name: Build for Linux AMD64
      run: |
        cd backend
        go get boozer
        GOOS=linux GOARCH=amd64 go build -o backend-app-linux-amd64
    - name: Upload Linux AMD64 binary
      uses: actions/upload-artifact@v4
      with:
        name: backend-binary-linux-amd64
        path: backend/backend-app-linux-amd64

    # Build for Linux ARM64
    - name: Build for Linux ARM64
      run: |
        cd backend
        go get boozer
        GOOS=linux GOARCH=arm64 go build -o backend-app-linux-arm64
    - name: Upload Linux ARM64 binary
      uses: actions/upload-artifact@v4
      with:
        name: backend-binary-linux-arm64
        path: backend/backend-app-linux-arm64

    # Build for Windows AMD64
    - name: Build for Windows AMD64
      run: |
        cd backend
        go get boozer
        GOOS=windows GOARCH=amd64 go build -o backend-app-windows-amd64.exe
    - name: Upload Windows AMD64 binary
      uses: actions/upload-artifact@v4
      with:
        name: backend-binary-windows-amd64
        path: backend/backend-app-windows-amd64.exe

    # Build for macOS AMD64
    - name: Build for macOS AMD64
      run: |
        cd backend
        go get boozer
        GOOS=darwin GOARCH=amd64 go build -o backend-app-macos-amd64
    - name: Upload macOS AMD64 binary
      uses: actions/upload-artifact@v4
      with:
        name: backend-binary-macos-amd64
        path: backend/backend-app-macos-amd64
